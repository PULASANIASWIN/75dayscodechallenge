https://leetcode.com/problems/squares-of-a-sorted-array/
class Solution {
public:
    vector<int> sortedSquares(vector<int>& nums) {
        vector<int>res;
        for(int i=0;i<nums.size();i++)
        {
            res.push_back(pow(nums[i],2));
        }
        sort(res.begin(),res.end());
        return res;
    }
};
************************
https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii/
class Solution {
public:
    int maxProfit(vector<int>& prices) {
      int n=prices.size();
        int diff=0;
        for(int i=1;i<n;i++)
        {
            if(prices[i]>prices[i-1])
            {
                diff+=prices[i]-prices[i-1];
            }
        }
        return diff;
    }
};
**************************
https://leetcode.com/problems/majority-element/
class Solution {
public:
    int majorityElement(vector<int>& nums) {
        unordered_map<int,int>m;
        int size=nums.size();
        int n=size/2;
        for(int i=0;i<size;i++)
        {
            m[nums[i]]++;
        }
        for(auto i:m)
        {
            if(i.second>n)
            {
                return i.first;
            }
        }
        return -1;
        
    }
};
******************************************
https://leetcode.com/problems/find-pivot-index/
